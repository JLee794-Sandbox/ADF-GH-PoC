name: 'ADF CICD PoC Sandbox Build'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/cicd.yml'
      - 'pipeline/**'
      - 'package.json' 

  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/cicd.yml'
      - 'pipeline/**'
      - 'package.json' 

env:
  rootFolder: './'
  adfId: '/subscriptions/7386cd39-b109-4cc6-bb80-bf12413d0a99/resourceGroups/validation-rg/providers/Microsoft.DataFactory/factories/ghBranchingPoC'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@main

      - uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install NPM package
        working-directory: ${{ env.rootFolder }}
        run: |
          npm install
        
      - name: Validate ADF resources
        working-directory: ${{ env.rootFolder }}
        run: |
          run build validate ${{ env.rootFolder }} ${{ env.adfId }}
        
      - name: Export ADF resources
        working-directory: ${{ env.rootFolder }}
        run: |
          run build export ${{ env.rootFolder }} ${{ env.adfId }}
        


# - task: Npm@1
#   inputs:
#     command: 'install'
#     workingDir: '$(Build.Repository.LocalPath)/<folder-of-the-package.json-file>' #replace with the package.json folder
#     verbose: true
#   displayName: 'Install npm package'


# # Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
# # Enter the appropriate subscription and name for the source factory.

# - task: Npm@1
#   inputs:
#     command: 'custom'
#     workingDir: '$(Build.Repository.LocalPath)/<folder-of-the-package.json-file>' #replace with the package.json folder
#     customCommand: 'run build validate $(Build.Repository.LocalPath)/<Root-folder-from-Git-configuration-settings-in-ADF> /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/testResourceGroup/providers/Microsoft.DataFactory/factories/<Your-Factory-Name>'
#   displayName: 'Validate'

# # Validate and then generate the ARM template into the destination folder, which is the same as selecting "Publish" from the UX.
# # The ARM template generated isn't published to the live version of the factory. Deployment should be done by using a CI/CD pipeline. 

# - task: Npm@1
#   inputs:
#     command: 'custom'
#     workingDir: '$(Build.Repository.LocalPath)/<folder-of-the-package.json-file>' #replace with the package.json folder
#     customCommand: 'run build export $(Build.Repository.LocalPath)/<Root-folder-from-Git-configuration-settings-in-ADF> /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/testResourceGroup/providers/Microsoft.DataFactory/factories/<Your-Factory-Name> "ArmTemplate"'
#   displayName: 'Validate and Generate ARM template'