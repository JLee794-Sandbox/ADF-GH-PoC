
trigger:
- main #collaboration branch

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: rootFolder
  value: './'
- name: adfId
  value: '/subscriptions/7386cd39-b109-4cc6-bb80-bf12413d0a99/resourceGroups/validation-rg/providers/Microsoft.DataFactory/factories/ghBranchingPoC'

steps:

# Installs Node and the npm packages saved in your package.json file in the build

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: "$(Build.Repository.LocalPath)/$( variables.rootFolder )"
    verbose: true
  displayName: 'Install npm package'

# Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
# Enter the appropriate subscription and name for the source factory.

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: "$(Build.Repository.LocalPath)/$( variables.rootFolder )"
    customCommand: 'run build validate $(Build.Repository.LocalPath)/$( variables.rootFolder ) $( variables.adfId )'
  displayName: 'Validate'

# Validate and then generate the ARM template into the destination folder, which is the same as selecting "Publish" from the UX.
# The ARM template generated isn't published to the live version of the factory. Deployment should be done by using a CI/CD pipeline. 

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: "$(Build.Repository.LocalPath)/$( variables.rootFolder )"
    customCommand: 'run build export $(Build.Repository.LocalPath)/$( variables.rootFolder ) $( variables.adfId ) "ArmTemplate"'
  displayName: 'Validate and Generate ARM template'

# Publish the artifact to be used as a source for a release pipeline.

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.Repository.LocalPath)/$( variables.rootFolder )/ArmTemplate' #replace with the package.json folder
    artifact: 'ArmTemplates'
    publishLocation: 'pipeline'